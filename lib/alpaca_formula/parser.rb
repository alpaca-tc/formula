# frozen_string_literal: true

#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'alpaca_formula/parser_extras'
module AlpacaFormula
  class Parser < Racc::Parser
    ##### State transition tables begin ###

    racc_action_table = [
      10, 11, 13,    12, 6, 17, 15, 10, 11, 15,
      12, 6, 10, 11, 15, 12, 6, 19
    ]

    racc_action_check = [
      0, 0, 1, 0, 0,    13, 1, 6, 6, 18,
      6, 6, 14, 14, 16, 14, 14, 16
    ]

    racc_action_pointer = [
      -2, 2, nil, nil, nil, nil, 5, nil, nil, nil,
      nil, nil,   nil, 5, 10, nil, 10, nil, 5, nil
    ]

    racc_action_default = [
      -1, -16, -2, -3, -4, -5, -1, -10, -11, -12,
      -13, -14, -15, -16, -1, -9, -16, 20, -7, -6
    ]

    racc_goto_table = [
      1, nil, nil,   nil, nil, nil, 16, nil, nil, nil,
      nil, nil, nil, nil, 18
    ]

    racc_goto_check = [
      1, nil, nil, nil,   nil, nil, 1, nil, nil, nil,
      nil, nil, nil, nil, 1
    ]

    racc_goto_pointer = [
      nil, 0,   nil, nil, nil, nil, nil, nil, nil, nil
    ]

    racc_goto_default = [
      nil, nil, 2, 3, 4, 5, 14, 7, 8, 9
    ]

    racc_reduce_table = [
      0, 0, :racc_error,
      0, 13, :_reduce_none,
      1, 13, :_reduce_2,
      1, 14, :_reduce_none,
      1, 14, :_reduce_none,
      1, 14, :_reduce_none,
      3, 16, :_reduce_6,
      3, 17, :_reduce_7,
      0, 17, :_reduce_none,
      1, 18, :_reduce_9,
      1, 15, :_reduce_none,
      1, 15, :_reduce_none,
      1, 15, :_reduce_none,
      1, 20, :_reduce_13,
      1, 21, :_reduce_14,
      1, 19, :_reduce_15
    ]

    racc_reduce_n = 16

    racc_shift_n = 20

    racc_token_table = {
      false => 0,
      :error => 1,
      :ITEM => 2,
      :DIGIT => 3,
      :OPERATOR => 4,
      :LITERAL => 5,
      :LPAREN => 6,
      :RPAREN => 7,
      '*' => 8,
      '/' => 9,
      '+' => 10,
      '-' => 11
    }

    racc_nt_base = 12

    racc_use_result_var = false

    Racc_arg = [
      racc_action_table,
      racc_action_check,
      racc_action_default,
      racc_action_pointer,
      racc_goto_table,
      racc_goto_check,
      racc_goto_default,
      racc_goto_pointer,
      racc_nt_base,
      racc_reduce_table,
      racc_token_table,
      racc_shift_n,
      racc_reduce_n,
      racc_use_result_var
    ].freeze

    Racc_token_to_s_table = [
      '$end',
      'error',
      'ITEM',
      'DIGIT',
      'OPERATOR',
      'LITERAL',
      'LPAREN',
      'RPAREN',
      '"*"',
      '"/"',
      '"+"',
      '"-"',
      '$start',
      'expressions',
      'expression',
      'terminal',
      'group',
      'calculation',
      'operator',
      'literal',
      'item',
      'digit'
    ].freeze

    Racc_debug_parser = false

    ##### State transition tables end #####

    # reduce 0 omitted

    # reduce 1 omitted

    def _reduce_2(val, _values)
      val.first
    end

    # reduce 3 omitted

    # reduce 4 omitted

    # reduce 5 omitted

    def _reduce_6(val, _values)
      Nodes::Group.new(val[1])
    end

    def _reduce_7(val, _values)
      Nodes::Cat.new(val[0], val[1], val[2])
    end

    # reduce 8 omitted

    def _reduce_9(val, _values)
      Nodes::Operator.new(val.first)
    end

    # reduce 10 omitted

    # reduce 11 omitted

    # reduce 12 omitted

    def _reduce_13(val, _values)
      Nodes::Item.new(val.first)
    end

    def _reduce_14(val, _values)
      Nodes::Digit.new(val.first)
    end

    def _reduce_15(val, _values)
      Nodes::Literal.new(val.first)
    end

    def _reduce_none(val, _values)
      val[0]
    end
  end   # class Parser
  end   # module AlpacaFormula
